// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl         = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

enum Role {
  GUEST
  OWNER
  OPERATOR
}

enum KycStatus {
  NONE
  PENDING
  VERIFIED
  FAILED
}

model Merchant {
  id                  Int        @id @default(autoincrement())
  name                String
  displayName         String?
  walletAddress       String
  users               User[]
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
}

model User {
  id                  Int        @id @default(autoincrement())
  externalId          String?    @unique
  role                Role
  walletAddress       String     @unique
  firstName           String?
  lastName            String?
  email               String?    @unique
  phoneNumber         String?    @unique
  ssn                 String?    @unique
  dob                 String?
  streetAddress       String?
  streetAddress2      String?
  city                String?
  state               String?
  postalCode          String?
  country             String?
  merchantId          Int?
  merchant            Merchant?  @relation(fields: [merchantId], references: [id])
  token               String?
  tosLink             String?
  kycLink             String?
  status              KycStatus  @default(NONE)
  lastSignedAt        DateTime?
  createdAt           DateTime   @default(now())
  updatedAt           DateTime   @updatedAt
}

enum OrderStatus {
  processing
  pending
  paid
  error
}

enum ChargeStatus {
  Authorized
  Declined
}

model Order {
  id                  Int       @id @default(autoincrement())
  externalId          String? @unique()
  chainId             String
  currency            String
  walletAddress       String
  amount              Float
  email               String
  phoneNumber         String
  firstName           String?
  lastName            String?
  merchantId          Int
  userId              Int
  tipAmount           Float   @default(0)
  serviceFee          Float   @default(0)
  networkFee          Float   @default(0)
  taxFee              Float   @default(0)
  unitAmount          Float   @default(0)
  chargeAmount        Float   @default(0)
  txHash              String?
  last4               String?
  chargeId            String?
  chargeCode          String?
  chargeMsg           String?
  chargeStatus        ChargeStatus?
  status              OrderStatus @default(pending)
  link                String?
  customerId          Int?
  customer            Customer?  @relation(fields: [customerId], references: [id])
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
}

model Customer {
  id                  Int       @id @default(autoincrement())
  externalId          String?
  firstName           String
  lastName            String
  email               String?
  phoneNumber         String?
  ssn                 String?
  dob                 String?
  streetAddress       String
  streetAddress2      String?
  city                String
  state               String
  postalCode          String
  country             String
  orders              Order[]
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt
}
